import textwrap

def menu():
    menu = """\n
    ================ MENU ================
    [d]\tDepositar
    [s]\tSacar
    [e]\tExtrato
    [nc]\tNova conta
    [lc]\tListar contas
    [nu]\tNovo usuário
    [q]\tSair
    => """
    return input(textwrap.dedent(menu))

def exibir_mensagem(tipo, texto, titulo=None):
    if titulo:
        print(f"\n=== {titulo} ===")

    if tipo == "erro":
        print(f"\n*-*- ERRO: {texto} -*-*")
    elif tipo == "sucesso":
        print(f"\n=== SUCESSO: {texto} ===")
    elif tipo == "info":
        print(f"\n=== INFO: {texto} ===")
    else:
        print(f"\n{texto}")

def validar_cpf(cpf):
    return len(cpf) == 11 and cpf.isdigit()  # Exemplo simples

def depositar(saldo, valor, extrato):
    if valor <= 0:
        exibir_mensagem("erro", "Operação falhou! O valor informado é inválido.")
        return saldo, extrato

    saldo += valor
    extrato += f"Depósito:\tR$ {valor:.2f}\n"
    exibir_mensagem("sucesso", "Depósito realizado com sucesso!")
    return saldo, extrato

def sacar(saldo, valor, extrato, limite, numero_saques, limite_saques):
    if valor <= 0:
        return saldo, extrato, "Operação falhou! O valor informado é inválido."

    if valor > saldo:
        return saldo, extrato, "Operação falhou! Você não tem saldo suficiente."
    if valor > limite:
        return saldo, extrato, "Operação falhou! O valor do saque excede o limite."
    if numero_saques >= limite_saques:
        return saldo, extrato, "Operação falhou! Número máximo de saques excedido."
    
    saldo -= valor
    extrato += f"Saque:\t\tR$ {valor:.2f}\n"
    numero_saques += 1
    return saldo, extrato, "Saque realizado com sucesso!"

def exibir_extrato(saldo, extrato):
    print("\n================ EXTRATO ================")
    print("Não foram realizadas movimentações." if not extrato else extrato)
    print(f"\nSaldo:\t\tR$ {saldo:.2f}")
    print("==========================================")

def criar_usuario(usuarios):
    cpf = input("Informe o CPF (somente número): ")
    if not validar_cpf(cpf):
        exibir_mensagem("erro", "CPF inválido!")
        return

    if filtrar_usuario(cpf, usuarios):
        exibir_mensagem("erro", "Já existe usuário com esse CPF!")
        return

    nome = input("Informe o nome completo: ")
    data_nascimento = input("Informe a data de nascimento (dd-mm-aaaa): ")
    endereco = input("Informe o endereço (logradouro, nro - bairro - cidade/sigla estado): ")

    usuarios.append({"nome": nome, "data_nascimento": data_nascimento, "cpf": cpf, "endereco": endereco})
    exibir_mensagem("sucesso", "Usuário criado com sucesso!")

def filtrar_usuario(cpf, usuarios):
    return next((usuario for usuario in usuarios if usuario["cpf"] == cpf), None)

def criar_conta(agencia, numero_conta, usuarios):
    cpf = input("Informe o CPF do usuário: ")
    usuario = filtrar_usuario(cpf, usuarios)

    if usuario:
        exibir_mensagem("sucesso", "Conta criada com sucesso!")
        return {"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario}

    exibir_mensagem("erro", "Usuário não encontrado, fluxo de criação de conta encerrado!")

def listar_contas(contas):
    if not contas:
        exibir_mensagem("erro", "Nenhuma conta cadastrada!")
        return
    
    for conta in contas:
        linha = f"""\
            Agência:\t{conta['agencia']}
            C/C:\t\t{conta['numero_conta']}
            Titular:\t{conta['usuario']['nome']}
        """
        print("=" * 100)
        print(textwrap.dedent(linha))

def main():
    LIMITE_SAQUES = 3
    AGENCIA = "0001"
    LIMITE_DEPÓSITO = 10000  # Limite para depósito

    saldo = 0
    limite = 500
    extrato = ""
    numero_saques = 0
    usuarios = []
    contas = []

    while True:
        opcao = menu()

        if opcao == "d":
            try:
                valor = float(input("Informe o valor do depósito: "))
                if valor <= LIMITE_DEPÓSITO:
                    saldo, extrato = depositar(saldo, valor, extrato)
                else:
                    exibir_mensagem("erro", f"O valor máximo para depósito é R$ {LIMITE_DEPÓSITO:.2f}.")
            except ValueError:
                exibir_mensagem("erro", "Operação falhou! Informe um valor numérico.")

        elif opcao == "s":
            try:
                valor = float(input("Informe o valor do saque: "))
                saldo, extrato, mensagem = sacar(saldo, valor, extrato, limite, numero_saques, LIMITE_SAQUES)
                exibir_mensagem("sucesso" if "realizado" in mensagem else "erro", mensagem)
            except ValueError:
                exibir_mensagem("erro", "Operação falhou! Informe um valor numérico.")

        elif opcao == "e":
            exibir_extrato(saldo, extrato)

        elif opcao == "nu":
            criar_usuario(usuarios)

        elif opcao == "nc":
            numero_conta = len(contas) + 1
            conta = criar_conta(AGENCIA, numero_conta, usuarios)
            if conta:
                contas.append(conta)

        elif opcao == "lc":
            listar_contas(contas)

        elif opcao == "q":
            print("Saindo... Até logo!")
            break

        else:
            exibir_mensagem("erro", "Operação inválida, por favor selecione novamente a operação desejada.")

if __name__ == "__main__":
    main()
